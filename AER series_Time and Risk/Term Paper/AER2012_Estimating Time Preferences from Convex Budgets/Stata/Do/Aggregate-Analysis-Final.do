log on/***** Aggregate Anaylsis Final.do ********//* This do file is called by doanaylsis.do and has 3 components.Part 1: Graphical Results. Figure 2 (b/w and color) along with other figures used in presentations.Part 2: Censoring and Monotonicity: Footnote 23Part 3: Table 2 presenting aggregate estimates along with F-tests noted in the text.Part 4: Appendix Table A1 presenting aggregate NLS estimates adjusted for censoring.Part 5: Appendix Table A2 exploring background parameters.*//*** Part 1 : Graphical Results ******/log offcapture drop avgcegen avgc = mean(c), by (budgetnum)capture label drop tlabellabel define tlabel 0 "t = 0 days" 1 "t = 7 days" 5 " t = 35 days"label values t tlabelcapture label drop klabellabel define klabel 35 "k = 35 days" 70 "k = 70 days" 98 " k = 98 days"label values k klabeltwoway (connected avgc pratio if t==0, sort) (connected avgc pratio if t == 1,sort) (connected avgc pratio if t==5,sort), ytitle(Mean Earlier Tokens) ylabel(0(20)100, angle(horizontal)) xtitle("Gross Interest Rate (1+r)") xlabel(#5) by(, legend(position(6))) legend(order(1 "t = 0 days" 2 "t = 7 days" 3 "t = 35 days") rows(1)) xsize(8) ysize(6) by(k, rows(1))  scheme(S1mono)graph export "Figures/graphbyt.pdf", replacetwoway (connected avgc pratio if t==0, sort) (connected avgc pratio if t == 1,sort) (connected avgc pratio if t==5,sort), ytitle(Mean Earlier Tokens) ylabel(0(20)100, angle(horizontal)) xtitle("Gross Interest Rate (1+r)") xlabel(#5) by(, legend(position(6))) legend(order(1 "t = 0 days" 2 "t = 7 days" 3 "t = 35 days") rows(1)) by(k, rows(1)) graph export "Figures/graphbyt2.pdf", replacetwoway (connected avgc pratio, sort), ytitle(Mean Earlier Tokens) ylabel(0(50)100, angle(horizontal)) xtitle("Gross Interest Rate (1+r)") xlabel(#5)  by(t k)graph export "Figures/basicgraph2.pdf", replacelog on/**** End Part 1 *********//**** Part 2: Censoring and Monotonicity: Footnote 23  *******/log off/* Income Monotonicity for Sooner Payment */capture drop temp1 temp2egen temp1 = mean(cons1) if pratio == 1.25 & mnumer == 20, by(labnumber budgetnum)egen temp2 = total(temp1), by(labnumber choiceset)replace temp2 = . if choiceset == 5capture drop temp3 temp4egen temp3 = mean(cons1) if pratio == 1.25 & mnumer == 25, by(labnumber budgetnum)egen temp4 = total(temp3) , by(labnumber choiceset)replace temp4 = . if choiceset == 5capture drop decreasing1gen decreasing1 = (temp2 > temp4)replace decreasing1 = . if choiceset == 5capture drop totaldecreasing1egen totaldecreasing1 = total(decreasing1), by(labnumber)replace totaldecreasing1 = totaldecreasing1/5/* Income Monotonicity for Later Payment */capture drop temp1 temp2egen temp1 = mean(cons2) if pratio == 1.25 & mnumer == 20, by(labnumber budgetnum)egen temp2 = total(temp1), by(labnumber choiceset)replace temp2 = . if choiceset == 5capture drop temp3 temp4egen temp3 = mean(cons2) if pratio == 1.25 & mnumer == 25, by(labnumber budgetnum)egen temp4 = total(temp3) , by(labnumber choiceset)replace temp4 = . if choiceset == 5capture drop decreasing2gen decreasing2 = (temp2 > temp4)replace decreasing2 = . if choiceset == 5capture drop totaldecreasing2egen totaldecreasing2 = total(decreasing2), by(labnumber)replace totaldecreasing2 = totaldecreasing2/5/* Adjustment of Second Period Tokens to Bring In Line With Monotonicity*/capture drop temp1 temp2egen temp1 = mean(cons2) if pratio == 1.25 & mnumer == 20, by(labnumber budgetnum)egen temp2 = total(temp1), by(labnumber choiceset)replace temp2 = . if choiceset == 5capture drop temp3 temp4egen temp3 = mean(cons2) if pratio == 1.25 & mnumer == 25, by(labnumber budgetnum)egen temp4 = total(temp3) , by(labnumber choiceset)replace temp4 = . if choiceset == 5capture drop adjustment2gen adjustment2 = 0replace adjustment2 = (temp4-temp2)/.25 if decreasing2 == 1capture drop temp1 temp2egen temp1 = mean(cons1) if pratio == 1.25 & mnumer == 20, by(labnumber budgetnum)egen temp2 = total(temp1), by(labnumber choiceset)replace temp2 = . if choiceset == 5capture drop temp3 temp4egen temp3 = mean(cons1) if pratio == 1.25 & mnumer == 25, by(labnumber budgetnum)egen temp4 = total(temp3) , by(labnumber choiceset)replace temp4 = . if choiceset == 5replace adjustment2 = -(temp4-temp2)*1.25/.25 if decreasing1 == 1replace adjustment2 = . if choiceset == 5capture drop meanadjustment2egen meanadjustment2 = mean(adjustment2), by(labnumber)log on /* Income Monotonicity: Footnote 23 */tab totaldecreasing1 totaldecreasing2 if obscount == 1/* Adjustment of Second Period Tokens to Bring In Line With Monotonicity*/su adjustment2 su meanadjustment2 if obscount == 1log off/* Response to Increase in Interest Rate, t=1, k=70 */capture drop tempgen temp = c if pratio== 1 & pratio != . & t==1 & k==70capture drop temp1egen temp1 = mean(temp), by(labnumber)capture drop tempgen temp = c if pratio >1.04 & pratio<1.06 & pratio != . & t==1 & k==70capture drop temp2egen temp2 = mean(temp), by(labnumber)capture drop tempgen temp = c if pratio >1.09 & pratio<1.12 & pratio != . & t==1 & k==70capture drop temp3egen temp3 = mean(temp), by(labnumber)capture drop tempgen temp = c if pratio >1.24 & pratio<1.26 & pratio != . & t==1 & k==70capture drop temp4egen temp4 = mean(temp), by(labnumber)capture drop tempgen temp = c if pratio >1.4 & pratio<1.5 & pratio != . & t==1 & k==70capture drop temp5egen temp5 = mean(temp), by(labnumber)capture drop decreasingirategen decreasingirate =0 replace decreasingirate  = 1 if temp1 <= temp2 & temp2 <= temp3 & temp3 <= temp4 & temp4 <= temp5 & temp1 < temp5capture drop nonmongen nonmon = 0replace nonmon = 1 if temp5 > temp1 | temp5 > temp2 | temp5 > temp3 | temp5 > temp4replace nonmon = 1 if temp4 > temp1 | temp4 > temp2 | temp4 > temp3 replace nonmon = 1 if temp3 > temp1 | temp3 > temp2 replace nonmon = 1 if temp2 > temp1  log on/* Response to Increase in Interest Rate, t=7, k=70 */tab decreasingiratetab nonmon

/* Adjustment to Non-monotonicity: ATTENTION Done by hand */
tab labnumber if nonmon ==1
capture drop adjustmenttokens
capture drop adjustment value
gen adjustmenttokens = .
gen adjustmentvalue = .
/* Subject 4: 2 tokens at 0.18 */
replace adjustmenttokens = 2 if labnumber ==4
replace adjustmentvalue = 0.36 if labnumber == 4
/* Subject 13: 5 tokens at 0.19 */
replace adjustmenttokens = 5 if labnumber ==13
replace adjustmentvalue = 0.95 if labnumber == 13
/* Subject 38: 8 tokens at 0.14 */
replace adjustmenttokens = 8 if labnumber ==38
replace adjustmentvalue = 1.12 if labnumber == 38
/* Subject 46: 6 tokens at 0.14, 3 at 0.16. 2 at 0.19, 4 at 0.20 */
replace adjustmenttokens = 15 if labnumber ==46
replace adjustmentvalue = 2.50 if labnumber == 46
/* Subject 56: 100 tokens at 0.18 */
replace adjustmenttokens = 100 if labnumber ==56
replace adjustmentvalue = 18 if labnumber == 56
/* Subject 59: 1 tokens at 0.14 , 4 at 0.18, 1 at 0.19*/
replace adjustmenttokens = 6 if labnumber ==59
replace adjustmentvalue = 1.05 if labnumber == 59
/* Subject 62: 10 tokens at 0.16 , 3 at 0.18*/
replace adjustmenttokens = 13 if labnumber ==62
replace adjustmentvalue = 2.14 if labnumber == 62
/* Subject 66: 48 tokens at 0.20*/
replace adjustmenttokens = 48 if labnumber ==66
replace adjustmentvalue = 9.60 if labnumber == 66

/* Adjustment Required */
su adjustmenttokens adjustmentvalue

log off
/* Response to Increase in Delay Length r = 1.05, t=0*/capture drop tempgen temp = c if pratio >1.01 & pratio<1.06 & pratio != . & t==0 & k==35capture drop temp1egen temp1 = mean(temp), by(labnumber)capture drop tempgen temp = c if pratio >1.01 & pratio<1.06 & pratio != . & t==0 & k==70capture drop temp2egen temp2 = mean(temp), by(labnumber)capture drop tempgen temp = c if pratio >1.01 & pratio<1.06 & pratio != . & t==0 & k==98capture drop temp3egen temp3 = mean(temp), by(labnumber)capture drop decreasing12gen decreasing12 = (temp2 - temp1) if pratio >1.01 & pratio<1.06 & pratio != . & t==0 & k==35capture drop decreasing13gen decreasing13 = (temp3 - temp1) if pratio >1.01 & pratio<1.06 & pratio != . & t==0 & k==35capture drop decreasing23gen decreasing23 = (temp3 - temp2) if pratio >1.01 & pratio<1.06 & pratio != . & t==0 & k==35capture drop decreasing1611gen decreasing1611 =0 replace decreasing1611  = 1 if decreasing12 <0 & decreasing13<0 & decreasing23<0replace decreasing1611 = . if decreasing12 == . log on/* Response to Increase in Delay Length r = 1.05, t=0*/tab decreasing1611/***** End Part 2 *******/log offlog on/*************************//**** Part 3: Table 2*******//* Column 1: CRRA, Solution Function, Two Background Parameters, NLS*/nl (cons1 = (( {gamma1 = 1}  + (mnumer-{gamma2= 1})*((({beta=1}*{delta =1}^k)*pratio)^(1/({alpha =0.7} -1))))/ (({beta=1}*{delta=1}^(k/({alpha = 0.7}-1)) * pratio^({alpha = 0.7}/({alpha = 0.7 }-1))) + 1))*t0 +(( {gamma1 = 1}  + (mnumer-{gamma2= 1})*((({delta =1}^k)*pratio)^(1/({alpha =0.7} -1))))/ (({delta=1}^(k/({alpha = 0.7}-1)) * pratio^({alpha = 0.7}/({alpha = 0.7 }-1))) + 1))*(1-t0)), clu(labnumber)capture drop conshatcapture drop tokenhatqui predict conshatqui replace conshat = 0 if conshat <0qui gen tokenhat= conshat/(mnumer/pratio)*100qui twoway  (line tokenhat pratio if t==1, sort color(red)) (connected avgc pratio if t==0, sort) (connected avgc pratio if t == 1,sort) (connected avgc pratio if t==5,sort), ytitle(Mean Earlier Tokens) ylabel(0(20)100, angle(horizontal)) xtitle("Gross Interest Rate (1+r)") xlabel(#5) by(, legend(position(6))) legend(order(2 "t = 0 days" 3 "t = 7 days" 4 "t = 35 days" 1 "Table 2, Column (1) Model Fit") rows(2)) xsize(8) ysize(6) by(k, rows(1))  scheme(S1mono)qui graph export "Figures/graphbytpredicted1.pdf", replacenlcom (alpha: _b[/alpha]) (yearrate: 1/_b[/delta]^365 - 1)  (beta:_b[/beta]) (gamma1: _b[/gamma1]) (gamma2: _b[/gamma2]), postest store col1test _b[alpha] = 1test _b[gamma1] = _b[gamma2]test _b[beta] = 1/* Column 2: CRRA, Solution Function, One Background Parameter, NLS*/nl (cons1= (((1 - (({beta=1}*{delta=1}^k)*(pratio))^(1/({alpha = 0.7} - 1)))*{gamma1 = 1}) + ((({beta=1}*{delta=1}^k)*(pratio))^(1/({alpha = 0.7} -1 )))*mnumer )/(( 1+ ((pratio)^({alpha = 0.7}/({alpha= 0.7} -1)))*(({beta=1}*{delta = 1}^k)^(1/({alpha= 0.7} -1 )) )))*t0     +       (((1 - (({delta=1}^k)*(pratio))^(1/({alpha = 0.7} - 1)))*{gamma1 = 1}) + ((({delta=1}^k)*(pratio))^(1/({alpha = 0.7} -1 )))*mnumer )/(( 1+ ((pratio)^({alpha = 0.7}/({alpha= 0.7} -1)))*(({delta = 1}^k)^(1/({alpha= 0.7} -1 )) )))*(1-t0)) , clu(labnumber)nlcom (alpha: _b[/alpha]) (yearrate: 1/_b[/delta]^365 - 1)  (beta:_b[/beta]) (gammaboth: _b[/gamma1]), postest store col2/* Column 3: CRRA, Solution Function, One Background Parameter = 0, NLS*/capture drop gammarestrictgen gammarestrict = 0nl (cons1= (((1 - (({beta=1}*{delta=1}^k)*(pratio))^(1/({alpha = 0.7} - 1)))*gammarestrict) + ((({beta=1}*{delta=1}^k)*(pratio))^(1/({alpha = 0.7} -1 )))*mnumer )/(( 1+ ((pratio)^({alpha = 0.7}/({alpha= 0.7} -1)))*(({beta=1}*{delta = 1}^k)^(1/({alpha= 0.7} -1 )) )))*t0     +       (((1 - (({delta=1}^k)*(pratio))^(1/({alpha = 0.7} - 1)))*gammarestrict) + ((({delta=1}^k)*(pratio))^(1/({alpha = 0.7} -1 )))*mnumer )/(( 1+ ((pratio)^({alpha = 0.7}/({alpha= 0.7} -1)))*(({delta = 1}^k)^(1/({alpha= 0.7} -1 )) )))*(1-t0)) , clu(labnumber)nlcom (alpha: _b[/alpha]) (yearrate: 1/_b[/delta]^365 - 1)  (beta:_b[/beta]), postest store col3/* Column 4: CRRA, Tangency Condition, One Background Parameter = 0, Two-Limit Tobit*/capture drop bggen bg = .01capture drop cratio gen cratio = (cons1+bg)/(cons2+bg)capture drop logcratio gen logcratio = log(cratio)capture drop highgen high = log((mnumer/pratio + bg)/ bg) capture drop lowgen low = log(bg/(20+bg)) replace low = log(bg/(25+bg)) if mnumer == 25capture drop tempgen temp = impatient - patientxi: cnreg logcratio t0 logpratio k , nocons clu(labnumber) censored(temp)nlcom (alpha: (1/(_b[logpratio])) + 1)  (yearrate: 1/exp(_b[k]/(_b[logpratio]))^(365) - 1) (beta: exp(_b[t0]/(_b[logpratio]))) (delta: exp(_b[k]/(_b[logpratio]))) , postest store col4/* Column 5: CRRA, Solution Function, One Background Parameter = -7.05, NLS*/capture drop gammarestrictegen gammarestrict = mean(-spendweek/7)nl (cons1= (((1 - (({beta=1}*{delta=1}^k)*(pratio))^(1/({alpha = 0.7} - 1)))*gammarestrict) + ((({beta=1}*{delta=1}^k)*(pratio))^(1/({alpha = 0.7} -1 )))*mnumer )/(( 1+ ((pratio)^({alpha = 0.7}/({alpha= 0.7} -1)))*(({beta=1}*{delta = 1}^k)^(1/({alpha= 0.7} -1 )) )))*t0     +       (((1 - (({delta=1}^k)*(pratio))^(1/({alpha = 0.7} - 1)))*gammarestrict) + ((({delta=1}^k)*(pratio))^(1/({alpha = 0.7} -1 )))*mnumer )/(( 1+ ((pratio)^({alpha = 0.7}/({alpha= 0.7} -1)))*(({delta = 1}^k)^(1/({alpha= 0.7} -1 )) )))*(1-t0)) , clu(labnumber)nlcom (alpha: _b[/alpha]) (yearrate: 1/_b[/delta]^365 - 1)  (beta:_b[/beta]), postest store col5/* Column 6: CRRA, Tangency Condition, One Background Parameter = -7.05, Two Limit Tobit*/capture drop bgegen bg = mean(spendweek/7)capture drop cratio gen cratio = (cons1+bg)/(cons2+bg)capture drop logcratio gen logcratio = log(cratio)capture drop highgen high = log((mnumer/pratio + bg)/ bg) capture drop lowgen low = log(bg/(20+bg)) replace low = log(bg/(25+bg)) if mnumer == 25capture drop logpratiogen logpratio = log(pratio)capture drop tempgen temp = impatient - patientxi: cnreg logcratio t0 logpratio k, nocons clu(labnumber) censored(temp)nlcom (alpha: (1/(_b[logpratio])) + 1)  (yearrate: 1/exp(_b[k]/(_b[logpratio]))^365 - 1) (beta: exp(_b[t0]/(_b[logpratio]))) (delta: exp(_b[k]/(_b[logpratio]))) , postest store col6/* Column 7: CARA, Tangency Condition, Two Limit Tobit */capture drop cdiffgen cdiff = cons1 - cons2capture drop tempgen temp = impatient - patientxi: cnreg cdiff  t0 logpratio k , nocons clu(labnumber) censored(temp)nlcom (rho: (1/(-_b[logpratio])))  (yearrate: 1/exp(_b[k]/(_b[logpratio]))^(365) - 1) (beta: exp(_b[t0]/(_b[logpratio]))) (delta: exp(_b[k]/(_b[logpratio]))) , postest store col7/* Column 8: CARA, Solution Function, Two Limit Tobit */capture drop t0rgen t0r = t0/(1+pratio)capture drop logpratiorgen logpratior = logpratio/(1+pratio)capture drop krgen kr = k/(1+pratio)capture drop mnumerrgen mnumerr = mnumer/(1+pratio)capture drop tempgen temp = impatient-patientxi: cnreg cons1  t0r logpratior kr, nocons clu(labnumber) censored(temp) offset(mnumerr)nlcom (rho: (1/(-_b[logpratior])))  (yearrate: 1/exp(_b[kr]/(_b[logpratior]))^(365) - 1) (beta: exp(_b[t0r]/(_b[logpratior]))) (delta: exp(_b[kr]/(_b[logpratior]))) , postest store col8log offlog on /* Table 2 */estout col1 col2 col3 col4 col5 col6 col7 col8, cells(b(fmt(%9.3f)) se(par fmt(%9.3f))) style(tex) stats(N ll r2) log off/**** End Part 3 *********//*** Part 4: NLS Estimates Adjusted for Censoring ***//* Estimators */capture program drop nlcensored1program nlcensored1	version 10	syntax varlist(min=5 max =5) [aw fw iw] if, at(name)	local cons1: word 1 of `varlist'	local t0: word 2 of `varlist'	local pratio: word 3 of `varlist'	local k: word 4 of `varlist'	local mnumer: word 5 of `varlist'	// Retrieve Parameters	tempname beta delta alpha gamma1 gamma2 sig	scalar `beta' = `at'[1,1]	scalar `delta' = `at'[1,2]	scalar `alpha' = `at'[1,3]	scalar `gamma1' = `at'[1,4]	scalar `gamma2' = `at'[1,5]	scalar `sig' = `at'[1,6]	// Some temporary variables	tempvar num0 denom0 num1 denom1 kernel0 kernel1 kernel alow ahigh Flow Fhigh last	generate double `num1' = `gamma1' + (`mnumer' - `gamma2')*(`pratio'*`delta'^`k')^(1/(`alpha'-1))   `if'	generate double `num0' = `gamma1' + (`mnumer' - `gamma2')*(`pratio'*`beta'*`delta'^`k')^(1/(`alpha'-1))  `if'	generate double `denom1' = 1 + `pratio'*(`pratio'*`delta'^`k')^(1/(`alpha'-1))  `if'	generate double `denom0' = 1 + `pratio'*(`pratio'*`beta'*`delta'^`k')^(1/(`alpha'-1))  `if'	generate double `kernel0' = (`num1'/`denom1')*(1-`t0')  `if'	generate double `kernel1' = (`num0'/`denom0')*`t0'  `if'	generate double `kernel' = `kernel0' + `kernel1'  `if'	generate double `alow' = (0 - `kernel')/1 `if'	generate double `ahigh' = ((`mnumer'/`pratio') - `kernel')/1  `if'	generate double `Flow' = normal(`alow')  `if'	generate double `Fhigh' = normal(`ahigh')  `if'	generate double `last' = ((normalden(`alow') - normalden(`ahigh'))/(`Fhigh' - `Flow'))*1 `if'		// Fill in dependent variable		replace `cons1' = (`kernel' + `last')*(`Fhigh'-`Flow') + `Flow'*0 + (1-`Fhigh')*(`mnumer'/`pratio')   `if'	endcapture program drop nlcensored2program nlcensored2	version 10	syntax varlist(min=5 max =5) [aw fw iw] if, at(name)	local cons1: word 1 of `varlist'	local t0: word 2 of `varlist'	local pratio: word 3 of `varlist'	local k: word 4 of `varlist'	local mnumer: word 5 of `varlist'	// Retrieve Parameters	tempname beta delta alpha gamma sig	scalar `beta' = `at'[1,1]	scalar `delta' = `at'[1,2]	scalar `alpha' = `at'[1,3]	scalar `gamma' = `at'[1,4]	scalar `sig' = `at'[1,5]	// Some temporary variables	tempvar num0 denom0 num1 denom1 kernel0 kernel1 kernel alow ahigh Flow Fhigh last	generate double `num1' = `gamma' + (`mnumer' - `gamma')*(`pratio'*`delta'^`k')^(1/(`alpha'-1))   `if'	generate double `num0' = `gamma' + (`mnumer' - `gamma')*(`pratio'*`beta'*`delta'^`k')^(1/(`alpha'-1))  `if'	generate double `denom1' = 1 + `pratio'*(`pratio'*`delta'^`k')^(1/(`alpha'-1))  `if'	generate double `denom0' = 1 + `pratio'*(`pratio'*`beta'*`delta'^`k')^(1/(`alpha'-1))  `if'	generate double `kernel0' = (`num1'/`denom1')*(1-`t0')  `if'	generate double `kernel1' = (`num0'/`denom0')*`t0'  `if'	generate double `kernel' = `kernel0' + `kernel1'  `if'	generate double `alow' = (0 - `kernel')/1 `if'	generate double `ahigh' = ((`mnumer'/`pratio') - `kernel')/1  `if'	generate double `Flow' = normal(`alow')  `if'	generate double `Fhigh' = normal(`ahigh')  `if'	generate double `last' = ((normalden(`alow') - normalden(`ahigh'))/(`Fhigh' - `Flow'))*1 `if'		// Fill in dependent variable		replace `cons1' = (`kernel' + `last')*(`Fhigh'-`Flow') + `Flow'*0 + (1-`Fhigh')*(`mnumer'/`pratio')   `if'	endcapture program drop nlcensored3program nlcensored3	version 10	syntax varlist(min=6 max =6) [aw fw iw] if, at(name)	local cons1: word 1 of `varlist'	local t0: word 2 of `varlist'	local pratio: word 3 of `varlist'	local k: word 4 of `varlist'	local mnumer: word 5 of `varlist'	local gamma: word 6 of `varlist'	// Retrieve Parameters	tempname beta delta alpha sig	scalar `beta' = `at'[1,1]	scalar `delta' = `at'[1,2]	scalar `alpha' = `at'[1,3]	scalar `sig' = `at'[1,4]	// Some temporary variables	tempvar num0 denom0 num1 denom1 kernel0 kernel1 kernel alow ahigh Flow Fhigh last	generate double `num1' = `gamma' + (`mnumer' - `gamma')*(`pratio'*`delta'^`k')^(1/(`alpha'-1))	generate double `num0' = `gamma' + (`mnumer' - `gamma')*(`pratio'*`beta'*`delta'^`k')^(1/(`alpha'-1))	generate double `denom1' = 1 + `pratio'*(`pratio'*`delta'^`k')^(1/(`alpha'-1))	generate double `denom0' = 1 + `pratio'*(`pratio'*`beta'*`delta'^`k')^(1/(`alpha'-1))	generate double `kernel0' = (`num1'/`denom1')*(1-`t0')	generate double `kernel1' = (`num0'/`denom0')*`t0'	generate double `kernel' = `kernel0' + `kernel1'	generate double `alow' = (0 - `kernel')/1	generate double `ahigh' = ((`mnumer'/`pratio') - `kernel')/1	generate double `Flow' = normal(`alow')	generate double `Fhigh' = normal(`ahigh')	generate double `last' = ((normalden(`alow') - normalden(`ahigh'))/(`Fhigh' - `Flow'))*1		// Fill in dependent variable		replace `cons1' = (`kernel' + `last')*(`Fhigh'-`Flow') + `Flow'*0 + (1-`Fhigh')*(`mnumer'/`pratio') `if'	endlog on/* Appendix Table A1 *//* Column 1: CRRA, Solution Function, Two Background Parameters, NLS, Normal Density Assumed, sigma = 1 restricted*/nl censored1 @ cons1 t0 pratio k mnumer, parameters(beta delta alpha gamma1 gamma2 sig) initial(beta 1 delta 1 alpha 0.7 gamma1 5 gamma2 5 sig 1) clu(labnumber)nlcom (alpha: _b[/alpha]) (yearrate: 1/_b[/delta]^365 - 1)  (beta:_b[/beta]) (gamma1: _b[/gamma1]) (gamma2: _b[/gamma2]), postest store col1/* Column 2: CRRA, Solution Function, One Background Parameter, NLS, Normal Density Assumed, sigma = 1 restricted*/nl censored2 @ cons1 t0 pratio k mnumer, parameters(beta delta alpha gamma sig) initial(beta 1 delta 1 alpha 0.7 gamma 5 sig 1) clu(labnumber)nlcom (alpha: _b[/alpha]) (yearrate: 1/_b[/delta]^365 - 1)  (beta:_b[/beta]) (gammaboth: _b[/gamma]), postest store col2/* Column 3: CRRA, Solution Function, One Background Parameter = 0, NLS,  Normal Density Assumed, sigma = 1 restricted*/capture drop gamma gen gamma = 0nl censored3 @ cons1 t0 pratio k mnumer gamma, parameters(beta delta alpha sig) initial(beta 1 delta 1 alpha 0.5  sig 1)nlcom (alpha: _b[/alpha]) (yearrate: 1/_b[/delta]^365 - 1)  (beta:_b[/beta]), postest store col3/* Column 4: CRRA, Solution Function, One Background Parameter = -7.05, NLS,  Normal Density Assumed, sigma = 1 restricted*/capture drop gamma gen gamma = -7.046nl censored3 @ cons1 t0 pratio k mnumer gamma, parameters(beta delta alpha sig) initial(beta 1 delta 1 alpha 0.5  sig 1)nlcom (alpha: _b[/alpha]) (yearrate: 1/_b[/delta]^365 - 1)  (beta:_b[/beta]), postest store col4log offlog on/* Appendix Table A1 */estout col1 col2 col3  col4, cells(b(fmt(%9.3f)) se(par fmt(%9.3f))) style(tex)  stats(N ll r2) log off/*** End Part 4 ***//**** Part 5: Appendix Table A2 *****/log on/*** Appendix Table A2***/forvalues i = -25(1)1{capture drop gammarestrictgen gammarestrict = `i'qui nl (cons1= (((1 - (({beta=1}*{delta=1}^k)*(pratio))^(1/({alpha = 0.7} - 1)))*gammarestrict) + ((({beta=1}*{delta=1}^k)*(pratio))^(1/({alpha = 0.7} -1 )))*mnumer )/(( 1+ ((pratio)^({alpha = 0.7}/({alpha= 0.7} -1)))*(({beta=1}*{delta = 1}^k)^(1/({alpha= 0.7} -1 )) )))*t0     +       (((1 - (({delta=1}^k)*(pratio))^(1/({alpha = 0.7} - 1)))*gammarestrict) + ((({delta=1}^k)*(pratio))^(1/({alpha = 0.7} -1 )))*mnumer )/(( 1+ ((pratio)^({alpha = 0.7}/({alpha= 0.7} -1)))*(({delta = 1}^k)^(1/({alpha= 0.7} -1 )) )))*(1-t0)) , clu(labnumber)qui nlcom (yearrate: 1/_b[/delta]^365 - 1) (alpha: _b[/alpha])   (beta:_b[/beta])matrix tempmat = r(b)local rate = tempmat[1,1]local alpha = tempmat[1,2]local beta = tempmat[1,3]matrix tempmat = r(V)local ratese = sqrt(tempmat[1,1])local alphase = sqrt(tempmat[2,2])local betase = sqrt(tempmat[3,3])local r2 = round(e(r2), .001)capture drop tempgen temp = impatient - patientcapture drop bggen bg = -`i'capture drop logcratio qui gen logcratio = log((cons1 + bg)/(cons2+bg))capture drop logpratioqui gen logpratio = log(pratio)qui cnreg logcratio t0 logpratio k, nocons clu(labnumber) censored(temp)qui nlcom  (yearrate: 1/exp(_b[k]/(_b[logpratio]))^365 - 1) (alpha: (1/(_b[logpratio])) + 1) (beta: exp(_b[t0]/(_b[logpratio]))) matrix tempmat = r(b)local rate2= tempmat[1,1]local alpha2 = tempmat[1,2]local beta2 = tempmat[1,3]matrix tempmat = r(V)local ratese2 = sqrt(tempmat[1,1])local alphase2 = sqrt(tempmat[2,2])local betase2 = sqrt(tempmat[3,3])disp `i' " & " round(`rate', .001) " & " round(`beta', .001)   " & " round(`alpha', .001)  " & " `r2' " & & " round(`rate2', .001) " & " round(`beta2', .001)   " & " round(`alpha2', .001) " & " round(e(ll), .01) "\\"disp "& (" round(`ratese', .001)  ") & ("   round(`betase', .001)               ") & (" round(`alphase', .001) ") && & (" round(`ratese2', .001)  ") & ("   round(`betase2', .001)               ") & (" round(`alphase2', .001) ") & & \\" }log off/**** End Part 5 ****/